y
p-y
x
?tz
?rep
mapply(rep,1:4)
mapply(rep,1:4,4)
mapply(rep,1:4,1:4)
mapply(rep,1:4,4:1)
x<-c(rnorm(10),runif(10),rnorm(10,1))
?gl
f<-gl(3,2)
f
?split
split(x,f)
f<-gl(3,10)
split(x,f)
s<-split(x,f)
class(s)
?maplly
?mapplay
?mapply
?tapply
x<-read.csv("/home//ndavanzo/Documents//R/coursera//specdata/200.csv",header=TRUE)
dim(x)
x[1:5,]
s<-split(x,x$nitrate)
length(s)
fl<-list.files("/home//ndavanzo/Documents//R/coursera//specdata")
class(fl)
length(fl)
x<-lapply(fl[45:46],read.csv)
fl
?lapply
x<-lapply(file.path("/home//ndavanzo/Documents//R/coursera//specdata",fl[45:46]),read.csv)
class(x)
length(x)
x[1]
x[1,1:10]
x[1][1:10]
x[[1]][1:10]
x[[1]][1:10,]
s<-split(x,x$ID)
x_df<-do.call(rbind.data.frame,x)
class(x_df)
s<-split(x,x$ID)
s<-split(x_df,x_df$ID)
s
class(s)
length(s)
f1<-gl(2,5)
f2<-gl(5,2)
interaction(f1,f2)
f1
f2
?str
y<-rnorm(10)
str(x,list(f1,f2))
str(x,split(list(f1,f2))
)
str(split(x,list(f1,f2))
)
str(split(y,list(f1,f2)))
y
str(split(y,f1))
str(split(y,f2))
?invisible
?traceback
?debug
?trace
?recover
rm(list=ls())
ls
ls8
ls()
library(datasets)
data(iris)
?iris
dim(iris)
class(iris)
iris[1:5,]
?tapply
?split
?split
?split
?tapply
s<-split(iris, iris$virginica)
s<-split(iris, iris$Species)
class(s)
length(s)
s
lapply(s, function(w) colMeans(iris[,c("Species")]))
lapply(s, function(w) colMeans(iris[,c("Sepal.Length")]))
?colMeans
lapply(s, function(w) colMeans(s[,c("Sepal.Length")]))
lapply(s, function(w) colMeans(s[3]))
lapply(s, function(w) colMeans(s[[3]]$Sepal.Length))
s[3]
s[[3]]$Sepal.Length
mean(s[[3]]$Sepal.Length)
colMeans(iris)
iria[,1:4]
iris[,1:4]
dim(iris)
mean(iris[,1])
mean(iris[,2])
mean(iris[,3])
mean(iris[,4])
mean(iris[,5])
?apply
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
dim(mtcars)
class(mtcars)
mtcars
split(mtcars$mpg,mtcars$cyl)
ss<-split(mtcars$mpg,mtcars$cyl)
sapply(ss,mean)
mean(ss[1])
mean(ss[[1]])
mean(ss[[2]])
mean(ss[[3]])
mtcars
ss<-split(mtcars$hp,mtcars$cyl)
ss
a<-sapply(ss,mean)
a
abs(a[1]-a[3])
abs(a[3]-a[1])
debug(ls)
ls
?ls()
3
q
q()
exit
library(dataset)
library(datasets)
data(iris)
?split
iris
s<-split(iris, iris$Species)
s
class(s)
mean(s[[3]]$Sepal.Length)
apply(iris[,1:4],2,mena)
apply(iris[,1:4],2,mean)
data(mtcars)
tapply(mtcars$mpg)
tapply(mtcars$mpg,mtcars$cyl,mean)
mtcars
ss<-split(mtcars$hp,mtcars$cyl)
ss
a<-tapply(ss,mean)
?tapply
a<-tapply(mtcars$hp,mtcars$cyl,mean)
a
abs(a[1]-a[3])
q()
?sample
?rpois
date()
library(XML)
install.packages("XML")
library(XML)
library("XML")
install.packages("XML")
library(XML)
fileUrl<-"http://www.w3schools.com/xml/simple.xml"
class(fileUrl)
dim(fileUrl)
length(fileUrl)
is.vector(fileUrl)
is.list(fileUrl)
doc<-xmlTreeParse(fileUrl,useInternalNodes = TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
doc
names(rootNode)
class(name(rootNode))
class(names(rootNode))
is.vector(names(rootNode))
rootNode[[1]]
rootNode[[2]]
rootNode[[3]]
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[2]]
rootNode[[1]][[3]]
xmlSApply(rootNode,xmlValue)
ls()
rootNode
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//price",xmlValue)
xpathSApply(rootNode,"/name",xmlValue)
fileUrl<-"http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc<-htmlTreeParse(fileUrl,useInternal=TRUE)
scores<-xpathSApply
scores<-xpathSApply(doc,"//li",xmlValue)
scores
scores<-xpathSApply(doc,"//li@class='score",xmlValue)
scores<-xpathSApply(doc,"//li@class='score',xmlValue)
ù
q
)
c
scores<-xpathSApply(doc,"//li[@class='score'],xmlValue)
scores<-xpathSApply(doc,"//li[@class='score']",xmlValue)
scores
scores<-xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores<-xpathSApply(doc,"//li[@class='score']",xmlValue)
teams<-xpathSApply(doc,"//li[@class='team-name']",xmlValue)
teams
rootNode<-xmlRoot(doc)
rootNode
library(jsonlite)
jsonData<-fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
?TOJASON
?toJASON
?toJSON
library(data.tables)
library(data.table)
install.packages(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
DT<-data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
DT
tables()
DT[2,]
DT[2,3]
DT[C(2,3)]
DT[c(2,3)]
DT[2,4]
DT[1,4]
DT[1]
DT[1,]
DT[1,0]
DT[1:5]
DT[DT$y="a",]
DT[DT$y=="a",]
DT[DT$y=="b",]
DT[DT$y=="c",]
k={print(10);5}
print(k)
DT[,list(mean(x),sum(z))]
DT
DT[list(mean(x),sum(z))]
DT[list(mean(x),sum(z)),]
DT[,table(y)]
?table
DT[,w:=z^2]
DT
DT2<-DT
DT[,y:=2]
DT
DT2
DT[,m:={tmp<-(x+z),log2(tmp+5)}]
DT[,m:={tmp<-(x+z);log2(tmp+5)}]
DT
DT[,x>0]
DT[,a:=x>0]
DT
?by
DT[,b:=mean(x+w)]
DT
DT[,b:=mean(x+w),by=a]
DT
?setkey
DT<-data.table(x=rep(c("a","b","c"),each=100),y=rnorm(300))
dim(DT)
setkey(DT,x)
DT['A']
DT['a']
?tempfile
big_df<-data.frame(x=xnorm(1E6),y=rnorm(1E6))
big_df<-data.frame(x=rnorm(1E6),y=rnorm(1E6))
file<-tempfile()
file
class(file)
?fread
getwd()
q()
q()
library(RMySQL)
?fetch
library(dlpyr)
library(dplyr)
options(width=105)
chicago<-readRDS("chicago.rds")
library(reshape2)
chicago<-readRDS("chicago.rds")
library(chicago)
?arrange
library(dplyr)
?arrange
library(dplyr)
?arrange
?str
?table
?xtabs
warpbreaks
dim(warpbreaks)
warpbreaks$replicate<-rep(1:9,len=54)
warpbreaks
xt=xtabs(breaks~.,data=warpbreaks)
xt
ftable(xt)
?cut
?cut2
?melt
?dcast
head(InsectSprays)
q()
?sort
?all
data(warpbreaks)
warpbreaks
ucbadmission
data(ucnadmission)
data(ucbadmission)
UCBAdmission
data(UCBAdmission)
UCBAdmissionS
UCBAdmissions
yesno<-sample(c("yes","no"),size=10,replace=TRUE)
YESNO
yesno
?sample
data(InsectSprays)
InsectSprays
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
if(!file.exists("./data")){dir.create("./data")}
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
cameraData<-read.csv("./data/cameras.csv")
names(cameraData)
dim(cameraData)
tolower(names(cameraData))
?tolower
splitNames=strsplit(names(cameraData),"\\.")
class(splitNames)
dim(splitNames)
length(splitNames)
splitNames
?list
splitNames
splitNames[[5]][1]
splitNames[[56]][1]
splitNames[[6]][1]
splitNames[[6]][2]
firstElement<-function(x){x[1]}
sapply(splitNames,firstElement)
fileUrl1<-"https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2<-"https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,destfile=".data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/solutions.csv",method="curl")
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/reviews.csv",method="curl")
wdget()
getwd()
fileUrl1<-"https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2<-"https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/solutions.csv",method="curl")
ls()
grep("Alamed",cameraData)
grep("Alamed",cameraData$intersection)
cameraData$intersection
grepl("Alamed",cameraData$intersection)
table(grepl("Alamed",cameraData$intersection))
grep("Alamed",cameraData$intersection,value=TRUE)
library(stringr)
nchar("Jeffrey Leek")
?tolower
?strsplt
?strsplit
?sub
?grep
?nchar
?substr
nchar("Jeffrey Leek")
substr("Jeffrey Leek")
substr("Jeffrey Leek",1,7)
?paste0
?str_trim
str_trim("Jeff     ")
d1=date()
d1
class(d1)
d2=Sys.Date
d2
d2=Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
weekdays(d2)
julian(d2)
lobrary(lubridate)
library(lubridate)
install.packages("lubridate")
library(lubridate)
ymd("19812202")
ymd("19810222")
mdy("22/02/1981")
mdy("02/22/1981")
?Sys.timezone
?wday()
x=dmy(c("22feb2015"))
wday(x)
wday(x,label=TRUE)
q()
library(dataset)
library(datasets)
data(cars)
?with
with(cars,plot(speed,dist))
dim(cars)
plot(cars)
?with
library(lattice)
state<-data.frame(state.x77,region=state.region)
dim(state)
head(state)
dim(state.region)
length(state.region)
?xyplot
xyplot(Life.Exp ~ Income | region, data=state)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(1,4))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
?xyplot
library(ggplot2)
data(mpg)
?qplot
head(mpg)
qplot(displ,hwy,data=mpg)
?par
length(airquality)
airquality
dim(airquality)
head(airquality)
hist(airquality$Ozone)
?transform
factor(airquality$Month)
airquality<-transform(airquality, Month=factor(Month))
head(airquality)
boxplot(Ozone,Month,airquality)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)")
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month=5),points(Wind,Ozone,col="blue"))
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month=5),points(Wind,Ozone,col="blue"))
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month=5),points(Wind,Ozone,col="red"))
with(subset(airquality,Month=5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
legend("topright",pch=1,col=("blue","red"),legend=c("May","Other Months"))
legend("topright",pch=1,col=c("blue","red"),legend=c("May","Other Months"))
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"),pch=2)
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City"),pch=20)
with(airquality, plot(Wind,Ozone,main="Ozone and Wind in New York City",pch=20))
?model
?lm
model<-lm(Ozone~Wind,airqualityù)
model<-lm(Ozone~Wind,airquality)
abline(model.lwd=2)
abline(model,lwd=2)
par(mfrow=c(1,2))
with(airquality{})
with(airquality{
?gl
?str
g<-gl(2,50,labels=c("Male","Female"))
g
dev.cur()
?pdf
?postscript
?quartz
?phc
?pch
q()
q()
library(ggplots2)
library("ggplots2")
download.packages("ggplots2")
installed.packages("ggplots2")
library(ggplots2)
library("ggplot2", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
dataset(mpg)
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,facet=.~drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(displ,hwy,data=mpg,facets=drv.~)
qplot(hwy,data=mpg,facets=drv.~)
qplot(hwy,data=mpg,facets=drv~.,bandwidth=2)
qplot(displ,hwy,data=mpg,facets=drv~.)
qplot(hwy,data=mpg,facets=drv~.,bandwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=.~drv,binwidth=2)
spr(maacs)
srp(maacs)
str(maacs)
?geom_point
q()
update.packages()
q(9)
q()
